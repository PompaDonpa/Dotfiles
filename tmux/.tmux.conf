
#  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà     ‚ñà‚ñà ‚ñà‚ñà     ‚ñà‚ñà
# ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë ‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà   ‚ñà‚ñà
#     ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà ‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà ‚ñà‚ñà
#     ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà  ‚ñë‚ñë‚ñà‚ñà‚ñà
#     ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà  ‚ñë‚ñë‚ñà   ‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñà‚ñà
#     ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà   ‚ñë    ‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà  ‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà
#     ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà
#     ‚ñë‚ñë     ‚ñë‚ñë         ‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë     ‚ñë‚ñë

#‚ñà‚ñì‚ñí‚ñë Shell
if-shell "[ $(uname) == 'Darwin' ]" {
    set -g default-command /opt/homebrew/bin/zsh
    set -g default-shell /opt/homebrew/bin/zsh
} {
    set -g default-command /usr/bin/zsh
    set -g default-shell /usr/bin/zsh
}

#‚ñà‚ñì‚ñí‚ñë Screen
set -g default-terminal "screen-256color"

# start with window 1 (instead of 0)
set -g base-index 1
# renumber windows after closing
set -g renumber-windows on
# start with pane 1
set -g pane-base-index 1
# remove esc delay
set -sg escape-time 0
# tmux display things in 256 colors
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# base16 shell color escape sequences
set -g allow-passthrough 1

#‚ñà‚ñì‚ñí‚ñë Config
# history
set -g history-limit 20000
# automatically renumber tmux windows
set -g renumber-windows on

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# for nested tmux sessions
bind-key a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# tile all windows
unbind =
bind = select-layout tiled

# cycle through panes
# unbind C-a
# unbind o # this is the default key for cycling panes
# bind ^A select-pane -t:.+

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
set-window-option -g automatic-rename on
set-option -g automatic-rename-format ""

######################
#### Key Bindings ####
######################

# breaking a Pane Out to a New Window
bind-key b break-pane -d

# source config file
bind r source-file ~/.tmux.conf \; display-message " ‚ô´ ‚ô™ ‚óñ·µî·¥•·µî‚óó ‚ô™ ‚ô´   ~/.tmux.conf reloaded."

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Tmux fzf 
bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# enable mouse support for switching panes/windows
setw -g mouse on

# set vi mode for copy mode
setw -g mode-keys vi
set -g status-keys vi

# more settings to make copy-mode more vim-like
# To navigating through output in quick way, enable vim navigation keys
set-window-option -g mode-keys vi

# Vim Style in Copy-Mode "<prefix> ["
# Interacting with Paste Buffer
bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection            -N "start visual mode for selection"
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel  -N "yank text into the buffer"
bind-key C-b choose-buffer # view the buffer stack
unbind-key p
bind-key p paste-buffer # default "<prefix> ]"

# Alt+C: To copy from the current buffer to the sys clipboard .
bind-key M-c run "tmux save-buffer - | xclip -i -sel clipboard"

# Alt+V: To paste text from sys clipboard into current buffer
bind-key M-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\""

# Ctr+C: Make it even better -just one step to move from sys->buffer->editor vice versa
bind-key -Tcopy-mode-vi C-c send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

# Ctr+V: To paste text from sys clipboard into the view
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
# create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.mytmux/pane_screenshots/\"$(date +%FT%T)\".screenshots"

if-shell "uname | grep -q Darwin" {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
    bind C-c run 'tmux save-buffer - | pbcopy'; \
    bind C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'}

if-shell '[[ $(uname -s) = Linux ]]' {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
    bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
    bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'}


######################
####    PLUGINS   ####
######################
# https://github.com/rothgar/awesome-tmux

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'ofirgall/tmux-keyboard-layout'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'pwittchen/tmux-plugin-spotify'

# Pomodoro
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @pomodoro_start 'p'                  # Start a Pomodoro with tmux-prefix + p
set -g @pomodoro_cancel 'P'                 # Cancel a Pomodoro with tmux-prefix key + P
set -g @pomodoro_mins 25                    # The duration of the pomodoro
set -g @pomodoro_break_mins 5               # The duration of the break after the pomodoro
set -g @pomodoro_notifications 'on'        # Enable desktop notifications from your terminal
set -g @pomodoro_sound 'on'                # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_on "#[fg=#E03A3E]\ue001 "
set -g @pomodoro_complete "#[fg=#C1D42F]\ue001 "

# Network Speed
set -g @plugin 'minhdanh/tmux-network-speed'
set -g @network_speed_download_color '#[fg=#ff595e]'
set -g @network_speed_upload_color '#[fg=#76c893]'

# Kripto
# set -g @kripto_id "bitcoin" # Nerfont \uf15a
set -g @plugin 'vascomfnunes/tmux-kripto'
set -g @kripto_id "ethereum" # Nerfont \ufcb9
set -g @krypto_round "true"
set -g @kripto_ttl 900

#‚ñà‚ñì‚ñí‚ñë THEMES ‚ñë‚ñí‚ñì‚ñà
# https://github.com/tmux-plugins/tpm
# https://dev.to/andrenbrandao/terminal-setup-with-zsh-tmux-dracula-theme-48lm

# Xero Tmux
# https://github.com/xero/dotfiles/blob/master/tmux/.tmux.conf
# https://github.com/o0th/tmux-nova/blob/master/Gallery.md
# https://github.com/arcticicestudio/nord-tmux

# Local Themes
#*1source-file "$DOTFILES/tmux/themes/default.conf"
#*2source-file "$DOTFILES/tmux/themes/bubbles.conf"
#*3source-file "$DOTFILES/tmux/themes/catpuccin.conf"

#dset -g @plugin 'dracula/tmux'
#nset -g @plugin "arcticicestudio/nord-tmux"
set -g @plugin 'o0th/tmux-nova'

#‚ñà‚ñì‚ñí‚ñë Nova
set -g @nova-nerdfonts true
set -g @nova-nerdfonts-left \uE0B8
set -g @nova-nerdfonts-right \uE0BA


#‚ñà‚ñì‚ñí‚ñë TOP LEFT ‚ñë‚ñí‚ñì‚ñà
set -g @nova-segment-mode "#{?client_prefix,\ue24d,\ue22d}" 
set -g @nova-segment-mode-colors "##FDB927 #62737A"

set -g @nova-pane "#I#{?pane_in_mode, Êïø #{pane_mode},} ÊïÑ #W"

#‚ñà‚ñì‚ñí‚ñë TOP RIGHT ‚ñë‚ñí‚ñì‚ñà
set -g @nova-segment-pomodoro "#(~/.tmux/plugins/tmux-pomodoro-plus/scripts/pomodoro.sh)"
set -g @nova-segment-pomodoro-colors "#30343f #640d14"

set -g @nova-segment-kripto "\ufcb9#(~/.tmux/plugins/tmux-kripto/scripts/kripto.sh)"
set -g @nova-segment-kripto-colors "#1b2021 #ff9505"

set -g @nova-segment-whoami "\ue0bbDN\ue0bb"
set -g @nova-segment-whoami-colors "#f5d491 #081c15"

#‚ñà‚ñì‚ñí‚ñë BOTTOM LEFT ‚ñë‚ñí‚ñì‚ñà
set -g @nova-segment-spotify "‚ô™ #(sudo ~/.tmux/plugins/tmux-plugin-spotify/scripts/spotify_song_full.sh)\t"
set -g @nova-segment-spotify-colors "#282a36 #f8f8f2"

set -g @nova-segment-world "ùöÇùôµ\ue0b9#(TZ=\"America/Los_Angeles\" date +%%H:%%M:%%S)\ue0b9\uf0ac"
set -g @nova-segment-world-colors "#282a36 #37e7e7"

#‚ñà‚ñì‚ñí‚ñë BOTTOM RIGHT ‚ñë‚ñí‚ñì‚ñà
set -g @cpu_percentage_format "%5.1f%%"
set -g @nova-segment-cpu "Ô°ö #(~/.tmux/plugins/tmux-cpu/scripts/cpu_percentage.sh)"
set -g @nova-segment-cpu-colors "#282a36 #c7f9cc"

set -g @ram_percentage_format "%5.1f%%"
set -g @nova-segment-ram "\uf2db#(~/.tmux/plugins/tmux-cpu/scripts/ram_percentage.sh)"
set -g @nova-segment-ram-colors "#282a36 #57cc99"

set -g @nova-segment-net "\uf9c4#(~/.tmux/plugins/tmux-network-speed/network_speed.sh)"
set -g @nova-segment-net-colors "#282a36 #ffea00"

#‚ñà‚ñì‚ñí‚ñë Does NOT wrok on M1
set -g @cpu_temp_unit "C"
set -g @cpu_temp_format "%3.0f"
set -g @nova-segment-cpu-temp "#(~/.tmux/plugins/tmux-cpu/scripts/cpu_temp.sh)"
set -g @nova-segment-cpu-temp-colors "#282a36 #80ed99"

set -g @gpu_percentage_format "%5.1f%%"
set -g @nova-segment-gpu "Ô¨ô#(sudo ~/.tmux/plugins/tmux-cpu/scripts/gpu_percentage.sh)"
set -g @nova-segment-gpu-colors "#282a36 #f8f8f2"

set -g @gpu_temp_unit "C"
set -g @gpu_temp_format "%3.0f"
set -g @nova-segment-gpu-temp "#(sudo ~/.tmux/plugins/tmux-cpu/scripts/gpu_temp.sh)"
set -g @nova-segment-gpu-temp-colors "#282a36 #f8f8f2"

set -g @gram_percentage_format "%5.1f%%"
set -g @nova-segment-gram "#(sudo ~/.tmux/plugins/tmux-cpu/scripts/gram_percentage.sh)"
set -g @nova-segment-gram-colors "#282a36 #f8f8f2"

set -g @nova-segment-tmux-mem-cpu-load "#(~/.tmux/plugins/tmux-mem-cpu-load)"
set -g @nova-segment-tmux-mem-cpu-load-colors "#b4d8df #ffd966"
#‚ñë‚ñí‚ñì‚ñà

#%set -g @nova-segment-tmux-local-devpod "OR"
#nset -g @nova-segment-tmux-local-devpod "Virginia"

#‚ñà‚ñì‚ñí‚ñë NOVA ROWS ‚ñë‚ñí‚ñì‚ñà
set -g @nova-rows 1
set -g @nova-segments-0-left "mode"
set -g @nova-segments-0-right "pomodoro kripto whoami"
set -g @nova-segments-1-left "spotify world"
set -g @nova-segments-1-right "cpu ram net"

# Install Plugins with Ctrl + a + I

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'