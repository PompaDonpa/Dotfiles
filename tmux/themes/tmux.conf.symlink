
#  ██████████ ████     ████ ██     ██ ██     ██
# ░░░░░██░░░ ░██░██   ██░██░██    ░██░░██   ██
#     ░██    ░██░░██ ██ ░██░██    ░██ ░░██ ██
#     ░██    ░██ ░░███  ░██░██    ░██  ░░███
#     ░██    ░██  ░░█   ░██░██    ░██   ██░██
#     ░██    ░██   ░    ░██░██    ░██  ██ ░░██
#     ░██    ░██        ░██░░███████  ██   ░░██
#     ░░     ░░         ░░  ░░░░░░░  ░░     ░░

# shell

if [[ -a /usr/bin/zsh ]]; then
    set -g default-command /usr/bin/zsh
    set -g default-shell /usr/bin/zsh
else
    set -g default-command /opt/homebrew/bin/zsh
    set -g default-shell /opt/homebrew/bin/zsh
fi


# screen mode
set -g default-terminal "screen-256color"

# start with window 1 (instead of 0)
set -g base-index 1

# renumber windows after closing
set -g renumber-windows on

# start with pane 1
set -g pane-base-index 1

# remove esc delay
set -sg escape-time 0

# tmux display things in 256 colors
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

set -g history-limit 20000

# automatically renumber tmux windows
set -g renumber-windows on

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# for nested tmux sessions
bind-key a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# tile all windows
unbind =
bind = select-layout tiled

# cycle through panes
# unbind C-a
# unbind o # this is the default key for cycling panes
# bind ^A select-pane -t:.+

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
set-window-option -g automatic-rename on
set-option -g automatic-rename-format ""

######################
#### Key Bindings ####
######################

# Breaking a Pane Out to a New Window
bind-key b break-pane -d

# source config file
bind r source-file ~/.tmux.conf \; display-message "◖ᵔᴥᵔ◗ ♪ ♫   ~/.tmux.conf reloaded."

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Tmux fzf 
bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# enable mouse support for switching panes/windows
setw -g mouse on

# set vi mode for copy mode
setw -g mode-keys vi
set -g status-keys vi

# more settings to make copy-mode more vim-like
# To navigating through output in quick way, enable vim navigation keys
set-window-option -g mode-keys vi

# Vim Style in Copy-Mode "<prefix> ["
# Interacting with Paste Buffer
bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection            -N "start visual mode for selection"
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel  -N "yank text into the buffer"
bind-key C-b choose-buffer # view the buffer stack
unbind-key p
bind-key p paste-buffer # default "<prefix> ]"

# Alt+C: To copy from the current buffer to the sys clipboard .
bind-key M-c run "tmux save-buffer - | xclip -i -sel clipboard"

# Alt+V: To paste text from sys clipboard into current buffer
bind-key M-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\""

# Ctr+C: Make it even better -just one step to move from sys->buffer->editor vice versa
bind-key -Tcopy-mode-vi C-c send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

# Ctr+V: To paste text from sys clipboard into the view
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
# create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.mytmux/pane_screenshots/\"$(date +%FT%T)\".screenshots"

if-shell "uname | grep -q Darwin" {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
    bind C-c run 'tmux save-buffer - | pbcopy'; \
    bind C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'}

if-shell '[[ $(uname -s) = Linux ]]' {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
    bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
    bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'}


# PLUGINS
# https://github.com/rothgar/awesome-tmux

# TMUX-PLUGINS
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'ofirgall/tmux-keyboard-layout'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# KRIPTO
set -g @plugin 'vascomfnunes/tmux-kripto'
set -g @kripto_id "ethereum"
set -g @krypto_round "true"
set -g @kripto_ttl 300


# THEMES
# https://github.com/tmux-plugins/tpm
# https://dev.to/andrenbrandao/terminal-setup-with-zsh-tmux-dracula-theme-48lm

# Xero Tmux
# https://github.com/xero/dotfiles/blob/master/tmux/.tmux.conf
# https://github.com/o0th/tmux-nova/blob/master/Gallery.md
# https://github.com/arcticicestudio/nord-tmux

#dset -g @plugin 'dracula/tmux'
#nset -g @plugin "arcticicestudio/nord-tmux"
#%set -g @plugin 'o0th/tmux-nova'

# NOVA

#%set -g @nova-nerdfonts true
#%set -g @nova-nerdfonts-left █▓▒░
#%set -g @nova-nerdfonts-right ░▒▓█

#%set -g @nova-segment-mode "#{?client_prefix,Ω,ω}"
#%set -g @nova-segment-mode-colors "#50fa7b #282a36"

#%set -g @nova-segment-whoami "daniel◑Uber"
#%set -g @nova-segment-whoami-colors "#00889f #5b5b5b"

#%set -g @nova-pane "#I#{?pane_in_mode, (งツ)ว #{pane_mode},} ¯\\\_(ツ)_/¯ #W"

#%set -g @nova-segment-spotify "♪ #(sudo ~/.tmux/plugins/tmux-plugin-spotify/scripts/spotify_song_full.sh)"
#%set -g @nova-segment-spotify-colors "#282a36 #f8f8f2"

#%set -g @cpu_percentage_format "%5.1f%%"
#%set -g @nova-segment-cpu " #(sudo ~/.tmux/plugins/tmux-cpu/scripts/cpu_percentage.sh)"
#%set -g @nova-segment-cpu-colors "#282a36 #f8f8f2"

#%set -g @cpu_temp_unit "C"
#%set -g @cpu_temp_format "%3.0f"
#%set -g @nova-segment-cpu-temp "#(sudo ~/.tmux/plugins/tmux-cpu/scripts/cpu_temp.sh)"
#%set -g @nova-segment-cpu-temp-colors "#282a36 #f8f8f2"

#%set -g @ram_percentage_format "%5.1f%%"
#%set -g @nova-segment-ram "#(sudo ~/.tmux/plugins/tmux-cpu/scripts/ram_percentage.sh)"
#%set -g @nova-segment-ram-colors "#282a36 #f8f8f2"

#%set -g @gpu_percentage_format "%5.1f%%"
#%set -g @nova-segment-gpu "﬙ #(sudo ~/.tmux/plugins/tmux-cpu/scripts/gpu_percentage.sh)"
#%set -g @nova-segment-gpu-colors "#282a36 #f8f8f2"

#%set -g @gpu_temp_unit "C"
#%set -g @gpu_temp_format "%3.0f"
#%set -g @nova-segment-gpu-temp "#(sudo ~/.tmux/plugins/tmux-cpu/scripts/gpu_temp.sh)"
#%set -g @nova-segment-gpu-temp-colors "#282a36 #f8f8f2"

#%set -g @gram_percentage_format "%5.1f%%"
#%set -g @nova-segment-gram "#(sudo ~/.tmux/plugins/tmux-cpu/scripts/gram_percentage.sh)"
#%set -g @nova-segment-gram-colors "#282a36 #f8f8f2"

#%set -g @net_speed_interfaces "enp6s0"
#%set -g @net_speed_format "↓ %10s - ↑ %10s"
#%set -g @nova-segment-net "#(sudo ~/.tmux/plugins/tmux-net-speed/scripts/net_speed.sh)"
#%set -g @nova-segment-net-colors "#282a36 #f8f8f2"

## set -g @nova-segment-tmux-mem-cpu-load "#(sudo ~/.tmux/plugins/tmux-mem-cpu-load)"
#%set -g @nova-segment-tmux-mem-cpu-load "OR"
#nset -g @nova-segment-tmux-mem-cpu-load "Virginia"
#%set -g @nova-segment-tmux-mem-cpu-load-colors "#b4d8df #ffd966"

#%set -g @nova-segment-world "#(sudo ~/.tmux/plugins/tmux-world-clock/scripts/tmux_world_clock.sh)"
#%set -g @nova-segment-world-colors "#cfe2f3 #444444"

#%set -g @nova-segment-kripto "#(sudo ~/.tmux/plugins/tmux-kripto/scripts/kripto.sh)"
#%set -g @nova-segment-kripto-colors "#e2f3cf #2d3029"

#%set -g @nova-rows 1
#%set -g @nova-segments-0-left "mode cpu net"
#%set -g @nova-segments-0-right "kripto tmux-mem-cpu-load whoami"
#%set -g @nova-segments-1-left "spotify tmux-mem-cpu-load"
#%set -g @nova-segments-1-right "cpu ram cpu-temp gpu gram gpu-temp"

# Themes
#*1source-file "$DOTFILES/tmux/themes/default.conf"
#*2source-file "$DOTFILES/tmux/themes/bubbles.conf"
#*3source-file "$DOTFILES/tmux/themes/catpuccin.conf"

# Install Plugins with Ctrl + a + I

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
